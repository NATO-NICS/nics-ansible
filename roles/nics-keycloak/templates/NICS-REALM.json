{
  "id" : "NICS",
  "realm" : "NICS",
  "notBefore" : 0,
  "revokeRefreshToken" : false,
  "refreshTokenMaxReuse" : 0,
  "accessTokenLifespan" : 300,
  "accessTokenLifespanForImplicitFlow" : 900,
  "ssoSessionIdleTimeout" : 5184000,
  "ssoSessionMaxLifespan" : 31536000,
  "ssoSessionIdleTimeoutRememberMe" : 0,
  "ssoSessionMaxLifespanRememberMe" : 0,
  "offlineSessionIdleTimeout" : 5184000,
  "offlineSessionMaxLifespanEnabled" : false,
  "offlineSessionMaxLifespan" : 5184000,
  "accessCodeLifespan" : 1800,
  "accessCodeLifespanUserAction" : 259200,
  "accessCodeLifespanLogin" : 3600,
  "actionTokenGeneratedByAdminLifespan" : 259200,
  "actionTokenGeneratedByUserLifespan" : 259200,
  "enabled" : true,
  "sslRequired" : "external",
  "registrationAllowed" : true,
  "registrationEmailAsUsername" : true,
  "rememberMe" : false,
  "verifyEmail" : false,
  "loginWithEmailAllowed" : true,
  "duplicateEmailsAllowed" : false,
  "resetPasswordAllowed" : true,
  "editUsernameAllowed" : false,
  "bruteForceProtected" : true,
  "permanentLockout" : false,
  "maxFailureWaitSeconds" : 900,
  "minimumQuickLoginWaitSeconds" : 60,
  "waitIncrementSeconds" : 60,
  "quickLoginCheckMilliSeconds" : 1000,
  "maxDeltaTimeSeconds" : 43200,
  "failureFactor" : 30,
  "roles" : {
    "realm" : [ {
      "id" : "417d2b1d-831d-447b-92f2-b85bff6b83d9",
      "name" : "uma_authorization",
      "description" : "${role_uma_authorization}",
      "composite" : false,
      "clientRole" : false,
      "containerId" : "NICS",
      "attributes" : { }
    }, {
      "id" : "442ab570-d40d-49e9-9b06-7a4aeb7c8c6f",
      "name" : "offline_access",
      "description" : "${role_offline-access}",
      "composite" : false,
      "clientRole" : false,
      "containerId" : "NICS",
      "attributes" : { }
    } ],
    "client" : {
      "nics-mobile" : [ ],
      "realm-management" : [ {
        "id" : "00d8d1c8-876e-478f-95eb-c69ce17fa79d",
        "name" : "manage-authorization",
        "description" : "${role_manage-authorization}",
        "composite" : false,
        "clientRole" : true,
        "containerId" : "a968ed43-388a-404f-b311-70d9281b709c",
        "attributes" : { }
      }, {
        "id" : "f5d3cd14-90c6-4426-aa16-070baf2950ad",
        "name" : "query-realms",
        "description" : "${role_query-realms}",
        "composite" : false,
        "clientRole" : true,
        "containerId" : "a968ed43-388a-404f-b311-70d9281b709c",
        "attributes" : { }
      }, {
        "id" : "8c34e7b8-e712-4534-9a35-439a1d2f11af",
        "name" : "query-groups",
        "description" : "${role_query-groups}",
        "composite" : false,
        "clientRole" : true,
        "containerId" : "a968ed43-388a-404f-b311-70d9281b709c",
        "attributes" : { }
      }, {
        "id" : "e63129e2-5aac-4715-a121-5d67597b5717",
        "name" : "view-events",
        "description" : "${role_view-events}",
        "composite" : false,
        "clientRole" : true,
        "containerId" : "a968ed43-388a-404f-b311-70d9281b709c",
        "attributes" : { }
      }, {
        "id" : "7cc5b1b8-ca46-413e-9e03-08b4cbfa7058",
        "name" : "query-users",
        "description" : "${role_query-users}",
        "composite" : false,
        "clientRole" : true,
        "containerId" : "a968ed43-388a-404f-b311-70d9281b709c",
        "attributes" : { }
      }, {
        "id" : "3cdb8e91-aaea-400f-b179-2587e33b1490",
        "name" : "manage-realm",
        "description" : "${role_manage-realm}",
        "composite" : false,
        "clientRole" : true,
        "containerId" : "a968ed43-388a-404f-b311-70d9281b709c",
        "attributes" : { }
      }, {
        "id" : "0c841475-ee73-4975-8c31-731b01f29163",
        "name" : "view-clients",
        "description" : "${role_view-clients}",
        "composite" : true,
        "composites" : {
          "client" : {
            "realm-management" : [ "query-clients" ]
          }
        },
        "clientRole" : true,
        "containerId" : "a968ed43-388a-404f-b311-70d9281b709c",
        "attributes" : { }
      }, {
        "id" : "fd7ba898-4056-454d-adc2-6f199f0f1003",
        "name" : "manage-identity-providers",
        "description" : "${role_manage-identity-providers}",
        "composite" : false,
        "clientRole" : true,
        "containerId" : "a968ed43-388a-404f-b311-70d9281b709c",
        "attributes" : { }
      }, {
        "id" : "6746d411-d9d5-4e77-9e85-8d883f1a0149",
        "name" : "view-realm",
        "description" : "${role_view-realm}",
        "composite" : false,
        "clientRole" : true,
        "containerId" : "a968ed43-388a-404f-b311-70d9281b709c",
        "attributes" : { }
      }, {
        "id" : "63986ce5-75ec-4be6-8f93-51c3f0efce0c",
        "name" : "view-identity-providers",
        "description" : "${role_view-identity-providers}",
        "composite" : false,
        "clientRole" : true,
        "containerId" : "a968ed43-388a-404f-b311-70d9281b709c",
        "attributes" : { }
      }, {
        "id" : "f38abf65-3e27-499c-be2b-9684242c5229",
        "name" : "manage-clients",
        "description" : "${role_manage-clients}",
        "composite" : false,
        "clientRole" : true,
        "containerId" : "a968ed43-388a-404f-b311-70d9281b709c",
        "attributes" : { }
      }, {
        "id" : "607e57f3-f549-4aaf-9a9c-bb37cf733bae",
        "name" : "view-users",
        "description" : "${role_view-users}",
        "composite" : true,
        "composites" : {
          "client" : {
            "realm-management" : [ "query-groups", "query-users" ]
          }
        },
        "clientRole" : true,
        "containerId" : "a968ed43-388a-404f-b311-70d9281b709c",
        "attributes" : { }
      }, {
        "id" : "43dc00b8-5d2c-4e10-8382-e668c4e7d172",
        "name" : "manage-users",
        "description" : "${role_manage-users}",
        "composite" : false,
        "clientRole" : true,
        "containerId" : "a968ed43-388a-404f-b311-70d9281b709c",
        "attributes" : { }
      }, {
        "id" : "4c0c7676-2235-4da7-9123-6d209a3f93a0",
        "name" : "create-client",
        "description" : "${role_create-client}",
        "composite" : false,
        "clientRole" : true,
        "containerId" : "a968ed43-388a-404f-b311-70d9281b709c",
        "attributes" : { }
      }, {
        "id" : "1ccd6958-d677-4b1c-9319-5357c06f81b9",
        "name" : "manage-events",
        "description" : "${role_manage-events}",
        "composite" : false,
        "clientRole" : true,
        "containerId" : "a968ed43-388a-404f-b311-70d9281b709c",
        "attributes" : { }
      }, {
        "id" : "254f2332-2c72-45ae-8722-88bbc80322ee",
        "name" : "view-authorization",
        "description" : "${role_view-authorization}",
        "composite" : false,
        "clientRole" : true,
        "containerId" : "a968ed43-388a-404f-b311-70d9281b709c",
        "attributes" : { }
      }, {
        "id" : "0ba2bcbd-fccd-4bd0-b5d9-529fe421fe7d",
        "name" : "impersonation",
        "description" : "${role_impersonation}",
        "composite" : false,
        "clientRole" : true,
        "containerId" : "a968ed43-388a-404f-b311-70d9281b709c",
        "attributes" : { }
      }, {
        "id" : "8335bfe0-bf0e-41c4-aec1-7d1a9396eb91",
        "name" : "query-clients",
        "description" : "${role_query-clients}",
        "composite" : false,
        "clientRole" : true,
        "containerId" : "a968ed43-388a-404f-b311-70d9281b709c",
        "attributes" : { }
      }, {
        "id" : "4705e5e2-0c6a-410a-8dac-a3da14429faa",
        "name" : "realm-admin",
        "description" : "${role_realm-admin}",
        "composite" : true,
        "composites" : {
          "client" : {
            "realm-management" : [ "manage-authorization", "query-realms", "query-groups", "view-events", "query-users", "manage-realm", "view-clients", "manage-identity-providers", "view-realm", "view-identity-providers", "manage-clients", "view-users", "manage-users", "create-client", "manage-events", "view-authorization", "impersonation", "query-clients" ]
          }
        },
        "clientRole" : true,
        "containerId" : "a968ed43-388a-404f-b311-70d9281b709c",
        "attributes" : { }
      } ],
      "security-admin-console" : [ ],
      "nics" : [ ],
      "admin-cli" : [ ],
      "broker" : [ {
        "id" : "064da4c3-3ebd-4462-adfd-b9fe2dc47e02",
        "name" : "read-token",
        "description" : "${role_read-token}",
        "composite" : false,
        "clientRole" : true,
        "containerId" : "24930b83-0046-457a-b824-3a89b6e9257b",
        "attributes" : { }
      } ],
      "account" : [ {
        "id" : "91d22bcc-1114-4e2f-987d-ef3b6614a5b3",
        "name" : "manage-account",
        "description" : "${role_manage-account}",
        "composite" : true,
        "composites" : {
          "client" : {
            "account" : [ "manage-account-links" ]
          }
        },
        "clientRole" : true,
        "containerId" : "8a5e7834-a235-480f-9c5b-92ad0d7f4b43",
        "attributes" : { }
      }, {
        "id" : "2874c973-4e40-4a2c-9d7e-681465b3fa72",
        "name" : "manage-account-links",
        "description" : "${role_manage-account-links}",
        "composite" : false,
        "clientRole" : true,
        "containerId" : "8a5e7834-a235-480f-9c5b-92ad0d7f4b43",
        "attributes" : { }
      }, {
        "id" : "81c2607b-77d5-42d4-8959-9c44a111a1d8",
        "name" : "view-profile",
        "description" : "${role_view-profile}",
        "composite" : false,
        "clientRole" : true,
        "containerId" : "8a5e7834-a235-480f-9c5b-92ad0d7f4b43",
        "attributes" : { }
      } ]
    }
  },
  "groups" : [ ],
  "defaultRoles" : [ "uma_authorization", "offline_access" ],
  "requiredCredentials" : [ "password" ],
  "passwordPolicy" : "notUsername(undefined) and length(8)",
  "otpPolicyType" : "totp",
  "otpPolicyAlgorithm" : "HmacSHA1",
  "otpPolicyInitialCounter" : 0,
  "otpPolicyDigits" : 6,
  "otpPolicyLookAheadWindow" : 1,
  "otpPolicyPeriod" : 30,
  "otpSupportedApplications" : [ "FreeOTP", "Google Authenticator" ],
  "users" : [ {
    "id" : "2460937b-796f-4526-85e8-6150af17eef8",
    "createdTimestamp" : 1556739386676,
    "username" : "service-account-nics",
    "enabled" : true,
    "totp" : false,
    "emailVerified" : false,
    "email" : "service-account-nics@placeholder.org",
    "serviceAccountClientId" : "nics",
    "credentials" : [ ],
    "disableableCredentialTypes" : [ ],
    "requiredActions" : [ ],
    "realmRoles" : [ "uma_authorization", "offline_access" ],
    "clientRoles" : {
      "account" : [ "manage-account", "view-profile" ]
    },
    "notBefore" : 0,
    "groups" : [ ]
  } ],
  "scopeMappings" : [ {
    "clientScope" : "offline_access",
    "roles" : [ "offline_access" ]
  } ],
  "clients" : [ {
    "id" : "8a5e7834-a235-480f-9c5b-92ad0d7f4b43",
    "clientId" : "account",
    "name" : "${client_account}",
    "baseUrl" : "/auth/realms/NICS/account",
    "surrogateAuthRequired" : false,
    "enabled" : true,
    "clientAuthenticatorType" : "client-secret",
    "secret" : "3ae86e6c-09ac-4ecc-afdd-de2c4dced614",
    "defaultRoles" : [ "manage-account", "view-profile" ],
    "redirectUris" : [ "/auth/realms/NICS/account/*" ],
    "webOrigins" : [ ],
    "notBefore" : 0,
    "bearerOnly" : false,
    "consentRequired" : false,
    "standardFlowEnabled" : true,
    "implicitFlowEnabled" : false,
    "directAccessGrantsEnabled" : false,
    "serviceAccountsEnabled" : false,
    "publicClient" : false,
    "frontchannelLogout" : false,
    "protocol" : "openid-connect",
    "attributes" : { },
    "authenticationFlowBindingOverrides" : { },
    "fullScopeAllowed" : false,
    "nodeReRegistrationTimeout" : 0,
    "defaultClientScopes" : [ "web-origins", "role_list", "profile", "roles", "email" ],
    "optionalClientScopes" : [ "address", "phone", "offline_access", "microprofile-jwt" ]
  }, {
    "id" : "7e1723d9-5c28-47fb-a63a-71bb7868380b",
    "clientId" : "admin-cli",
    "name" : "${client_admin-cli}",
    "surrogateAuthRequired" : false,
    "enabled" : true,
    "clientAuthenticatorType" : "client-secret",
    "secret" : "7449a383-9c54-4f46-9966-951eccb42fff",
    "redirectUris" : [ ],
    "webOrigins" : [ ],
    "notBefore" : 0,
    "bearerOnly" : false,
    "consentRequired" : false,
    "standardFlowEnabled" : false,
    "implicitFlowEnabled" : false,
    "directAccessGrantsEnabled" : true,
    "serviceAccountsEnabled" : false,
    "publicClient" : true,
    "frontchannelLogout" : false,
    "protocol" : "openid-connect",
    "attributes" : { },
    "authenticationFlowBindingOverrides" : { },
    "fullScopeAllowed" : false,
    "nodeReRegistrationTimeout" : 0,
    "defaultClientScopes" : [ "web-origins", "role_list", "profile", "roles", "email" ],
    "optionalClientScopes" : [ "address", "phone", "offline_access", "microprofile-jwt" ]
  }, {
    "id" : "24930b83-0046-457a-b824-3a89b6e9257b",
    "clientId" : "broker",
    "name" : "${client_broker}",
    "surrogateAuthRequired" : false,
    "enabled" : true,
    "clientAuthenticatorType" : "client-secret",
    "secret" : "d218031e-30ed-41e4-a2f5-9b8e88edecd6",
    "redirectUris" : [ ],
    "webOrigins" : [ ],
    "notBefore" : 0,
    "bearerOnly" : false,
    "consentRequired" : false,
    "standardFlowEnabled" : true,
    "implicitFlowEnabled" : false,
    "directAccessGrantsEnabled" : false,
    "serviceAccountsEnabled" : false,
    "publicClient" : false,
    "frontchannelLogout" : false,
    "protocol" : "openid-connect",
    "attributes" : { },
    "authenticationFlowBindingOverrides" : { },
    "fullScopeAllowed" : false,
    "nodeReRegistrationTimeout" : 0,
    "defaultClientScopes" : [ "web-origins", "role_list", "profile", "roles", "email" ],
    "optionalClientScopes" : [ "address", "phone", "offline_access", "microprofile-jwt" ]
  }, {
    "id" : "83c20a56-cf72-4ee6-a030-af4b4f41acb9",
    "clientId" : "nics",
    "surrogateAuthRequired" : false,
    "enabled" : true,
    "clientAuthenticatorType" : "client-secret",
    "secret" : "8f5eb497-a688-4bd2-9b67-c28b9e7ca89d",
    "redirectUris" : [ "https://{{ nics_alias_fqdn }}/*" ],
    "webOrigins" : [ ],
    "notBefore" : 0,
    "bearerOnly" : false,
    "consentRequired" : false,
    "standardFlowEnabled" : true,
    "implicitFlowEnabled" : false,
    "directAccessGrantsEnabled" : true,
    "serviceAccountsEnabled" : true,
    "publicClient" : false,
    "frontchannelLogout" : false,
    "protocol" : "openid-connect",
    "attributes" : {
      "saml.assertion.signature" : "false",
      "saml.force.post.binding" : "false",
      "saml.multivalued.roles" : "false",
      "saml.encrypt" : "false",
      "login_theme" : "nics",
      "saml.server.signature" : "false",
      "saml.server.signature.keyinfo.ext" : "false",
      "exclude.session.state.from.auth.response" : "false",
      "saml_force_name_id_format" : "false",
      "saml.client.signature" : "false",
      "tls.client.certificate.bound.access.tokens" : "false",
      "saml.authnstatement" : "false",
      "display.on.consent.screen" : "false",
      "saml.onetimeuse.condition" : "false"
    },
    "authenticationFlowBindingOverrides" : { },
    "fullScopeAllowed" : true,
    "nodeReRegistrationTimeout" : -1,
    "protocolMappers" : [ {
      "id" : "df203ded-b7cf-4274-b9d8-d761e1a72ddd",
      "name" : "Client ID",
      "protocol" : "openid-connect",
      "protocolMapper" : "oidc-usersessionmodel-note-mapper",
      "consentRequired" : false,
      "config" : {
        "user.session.note" : "clientId",
        "userinfo.token.claim" : "true",
        "id.token.claim" : "true",
        "access.token.claim" : "true",
        "claim.name" : "clientId",
        "jsonType.label" : "String"
      }
    }, {
      "id" : "fcaed97a-d987-4b39-a10e-efc9b023cf0d",
      "name" : "Client Host",
      "protocol" : "openid-connect",
      "protocolMapper" : "oidc-usersessionmodel-note-mapper",
      "consentRequired" : false,
      "config" : {
        "user.session.note" : "clientHost",
        "userinfo.token.claim" : "true",
        "id.token.claim" : "true",
        "access.token.claim" : "true",
        "claim.name" : "clientHost",
        "jsonType.label" : "String"
      }
    }, {
      "id" : "039b075a-1c44-4983-a549-22ca70b69c8d",
      "name" : "Client IP Address",
      "protocol" : "openid-connect",
      "protocolMapper" : "oidc-usersessionmodel-note-mapper",
      "consentRequired" : false,
      "config" : {
        "user.session.note" : "clientAddress",
        "userinfo.token.claim" : "true",
        "id.token.claim" : "true",
        "access.token.claim" : "true",
        "claim.name" : "clientAddress",
        "jsonType.label" : "String"
      }
    } ],
    "defaultClientScopes" : [ "web-origins", "role_list", "profile", "roles", "email" ],
    "optionalClientScopes" : [ "address", "phone", "offline_access", "microprofile-jwt" ]
  }, {
    "id" : "baf69153-16ab-4e40-b57d-270229f3730a",
    "clientId" : "nics-mobile",
    "surrogateAuthRequired" : false,
    "enabled" : true,
    "clientAuthenticatorType" : "client-secret",
    "secret" : "cf832e85-0bc8-4ba6-bf37-80816edef39c",
    "redirectUris" : [ "mobile.nics-api:/oauth2callback" ],
    "webOrigins" : [ ],
    "notBefore" : 0,
    "bearerOnly" : false,
    "consentRequired" : false,
    "standardFlowEnabled" : true,
    "implicitFlowEnabled" : false,
    "directAccessGrantsEnabled" : true,
    "serviceAccountsEnabled" : false,
    "publicClient" : true,
    "frontchannelLogout" : false,
    "protocol" : "openid-connect",
    "attributes" : {
      "saml.assertion.signature" : "false",
      "saml.force.post.binding" : "false",
      "saml.multivalued.roles" : "false",
      "saml.encrypt" : "false",
      "saml.server.signature" : "false",
      "saml.server.signature.keyinfo.ext" : "false",
      "exclude.session.state.from.auth.response" : "false",
      "saml_force_name_id_format" : "false",
      "saml.client.signature" : "false",
      "tls.client.certificate.bound.access.tokens" : "false",
      "saml.authnstatement" : "false",
      "display.on.consent.screen" : "false",
      "saml.onetimeuse.condition" : "false"
    },
    "authenticationFlowBindingOverrides" : { },
    "fullScopeAllowed" : true,
    "nodeReRegistrationTimeout" : -1,
    "defaultClientScopes" : [ "web-origins", "role_list", "profile", "roles", "email" ],
    "optionalClientScopes" : [ "address", "phone", "offline_access", "microprofile-jwt" ]
  }, {
    "id" : "a968ed43-388a-404f-b311-70d9281b709c",
    "clientId" : "realm-management",
    "name" : "${client_realm-management}",
    "surrogateAuthRequired" : false,
    "enabled" : true,
    "clientAuthenticatorType" : "client-secret",
    "secret" : "b11864bb-e8ce-41bb-8723-5481203c720c",
    "redirectUris" : [ ],
    "webOrigins" : [ ],
    "notBefore" : 0,
    "bearerOnly" : true,
    "consentRequired" : false,
    "standardFlowEnabled" : true,
    "implicitFlowEnabled" : false,
    "directAccessGrantsEnabled" : false,
    "serviceAccountsEnabled" : false,
    "publicClient" : false,
    "frontchannelLogout" : false,
    "protocol" : "openid-connect",
    "attributes" : { },
    "authenticationFlowBindingOverrides" : { },
    "fullScopeAllowed" : false,
    "nodeReRegistrationTimeout" : 0,
    "defaultClientScopes" : [ "web-origins", "role_list", "profile", "roles", "email" ],
    "optionalClientScopes" : [ "address", "phone", "offline_access", "microprofile-jwt" ]
  }, {
    "id" : "9b86a374-13ff-48b7-9e3b-08a6c4686dc6",
    "clientId" : "security-admin-console",
    "name" : "${client_security-admin-console}",
    "baseUrl" : "/auth/admin/NICS/console/index.html",
    "surrogateAuthRequired" : false,
    "enabled" : true,
    "clientAuthenticatorType" : "client-secret",
    "secret" : "978fc13e-3220-4179-b697-38ad0c61e302",
    "redirectUris" : [ "/auth/admin/NICS/console/*" ],
    "webOrigins" : [ ],
    "notBefore" : 0,
    "bearerOnly" : false,
    "consentRequired" : false,
    "standardFlowEnabled" : true,
    "implicitFlowEnabled" : false,
    "directAccessGrantsEnabled" : false,
    "serviceAccountsEnabled" : false,
    "publicClient" : true,
    "frontchannelLogout" : false,
    "protocol" : "openid-connect",
    "attributes" : { },
    "authenticationFlowBindingOverrides" : { },
    "fullScopeAllowed" : false,
    "nodeReRegistrationTimeout" : 0,
    "protocolMappers" : [ {
      "id" : "a20b9f45-2cc2-4bd5-8eb7-466f5d19ba0e",
      "name" : "locale",
      "protocol" : "openid-connect",
      "protocolMapper" : "oidc-usermodel-attribute-mapper",
      "consentRequired" : false,
      "config" : {
        "userinfo.token.claim" : "true",
        "user.attribute" : "locale",
        "id.token.claim" : "true",
        "access.token.claim" : "true",
        "claim.name" : "locale",
        "jsonType.label" : "String"
      }
    } ],
    "defaultClientScopes" : [ "web-origins", "role_list", "profile", "roles", "email" ],
    "optionalClientScopes" : [ "address", "phone", "offline_access", "microprofile-jwt" ]
  } ],
  "clientScopes" : [ {
    "id" : "32104872-095a-4df8-b32a-e3166c4fd912",
    "name" : "offline_access",
    "description" : "OpenID Connect built-in scope: offline_access",
    "protocol" : "openid-connect",
    "attributes" : {
      "consent.screen.text" : "${offlineAccessScopeConsentText}",
      "display.on.consent.screen" : "true"
    }
  }, {
    "id" : "9c9d9836-d45d-42df-9474-659432a0181f",
    "name" : "role_list",
    "description" : "SAML role list",
    "protocol" : "saml",
    "attributes" : {
      "consent.screen.text" : "${samlRoleListScopeConsentText}",
      "display.on.consent.screen" : "true"
    },
    "protocolMappers" : [ {
      "id" : "2786613f-a259-41fc-baae-3ce613e3108d",
      "name" : "role list",
      "protocol" : "saml",
      "protocolMapper" : "saml-role-list-mapper",
      "consentRequired" : false,
      "config" : {
        "single" : "false",
        "attribute.nameformat" : "Basic",
        "attribute.name" : "Role"
      }
    } ]
  }, {
    "id" : "8054987a-d582-4f7b-a405-d7a8cb99acab",
    "name" : "profile",
    "description" : "OpenID Connect built-in scope: profile",
    "protocol" : "openid-connect",
    "attributes" : {
      "include.in.token.scope" : "true",
      "display.on.consent.screen" : "true",
      "consent.screen.text" : "${profileScopeConsentText}"
    },
    "protocolMappers" : [ {
      "id" : "dafa5bf4-307d-4bd9-be01-07c7a54e007b",
      "name" : "zoneinfo",
      "protocol" : "openid-connect",
      "protocolMapper" : "oidc-usermodel-attribute-mapper",
      "consentRequired" : false,
      "config" : {
        "userinfo.token.claim" : "true",
        "user.attribute" : "zoneinfo",
        "id.token.claim" : "true",
        "access.token.claim" : "true",
        "claim.name" : "zoneinfo",
        "jsonType.label" : "String"
      }
    }, {
      "id" : "a13b2862-e102-49df-8fd4-e2e4034d0219",
      "name" : "middle name",
      "protocol" : "openid-connect",
      "protocolMapper" : "oidc-usermodel-attribute-mapper",
      "consentRequired" : false,
      "config" : {
        "userinfo.token.claim" : "true",
        "user.attribute" : "middleName",
        "id.token.claim" : "true",
        "access.token.claim" : "true",
        "claim.name" : "middle_name",
        "jsonType.label" : "String"
      }
    }, {
      "id" : "e969def0-58da-4823-8d95-9614fb923c65",
      "name" : "picture",
      "protocol" : "openid-connect",
      "protocolMapper" : "oidc-usermodel-attribute-mapper",
      "consentRequired" : false,
      "config" : {
        "userinfo.token.claim" : "true",
        "user.attribute" : "picture",
        "id.token.claim" : "true",
        "access.token.claim" : "true",
        "claim.name" : "picture",
        "jsonType.label" : "String"
      }
    }, {
      "id" : "8b26361f-0438-4961-a43d-f1d1426bb7f7",
      "name" : "website",
      "protocol" : "openid-connect",
      "protocolMapper" : "oidc-usermodel-attribute-mapper",
      "consentRequired" : false,
      "config" : {
        "userinfo.token.claim" : "true",
        "user.attribute" : "website",
        "id.token.claim" : "true",
        "access.token.claim" : "true",
        "claim.name" : "website",
        "jsonType.label" : "String"
      }
    }, {
      "id" : "24c3263e-3f08-4e0e-8623-4bd2595b7844",
      "name" : "family name",
      "protocol" : "openid-connect",
      "protocolMapper" : "oidc-usermodel-property-mapper",
      "consentRequired" : false,
      "config" : {
        "userinfo.token.claim" : "true",
        "user.attribute" : "lastName",
        "id.token.claim" : "true",
        "access.token.claim" : "true",
        "claim.name" : "family_name",
        "jsonType.label" : "String"
      }
    }, {
      "id" : "f57b35a5-7124-412b-aa15-a169617afb4b",
      "name" : "locale",
      "protocol" : "openid-connect",
      "protocolMapper" : "oidc-usermodel-attribute-mapper",
      "consentRequired" : false,
      "config" : {
        "userinfo.token.claim" : "true",
        "user.attribute" : "locale",
        "id.token.claim" : "true",
        "access.token.claim" : "true",
        "claim.name" : "locale",
        "jsonType.label" : "String"
      }
    }, {
      "id" : "85e54885-2dc4-4a3a-9931-bafb45c199b9",
      "name" : "username",
      "protocol" : "openid-connect",
      "protocolMapper" : "oidc-usermodel-property-mapper",
      "consentRequired" : false,
      "config" : {
        "userinfo.token.claim" : "true",
        "user.attribute" : "username",
        "id.token.claim" : "true",
        "access.token.claim" : "true",
        "claim.name" : "preferred_username",
        "jsonType.label" : "String"
      }
    }, {
      "id" : "a68044f2-2f34-41f0-89a7-163cbc470f8d",
      "name" : "nickname",
      "protocol" : "openid-connect",
      "protocolMapper" : "oidc-usermodel-attribute-mapper",
      "consentRequired" : false,
      "config" : {
        "userinfo.token.claim" : "true",
        "user.attribute" : "nickname",
        "id.token.claim" : "true",
        "access.token.claim" : "true",
        "claim.name" : "nickname",
        "jsonType.label" : "String"
      }
    }, {
      "id" : "523c48d3-6f4e-42b6-9417-fd8138408fe1",
      "name" : "given name",
      "protocol" : "openid-connect",
      "protocolMapper" : "oidc-usermodel-property-mapper",
      "consentRequired" : false,
      "config" : {
        "userinfo.token.claim" : "true",
        "user.attribute" : "firstName",
        "id.token.claim" : "true",
        "access.token.claim" : "true",
        "claim.name" : "given_name",
        "jsonType.label" : "String"
      }
    }, {
      "id" : "b2608e4f-fb50-41a2-bcb3-ec01609c94b3",
      "name" : "birthdate",
      "protocol" : "openid-connect",
      "protocolMapper" : "oidc-usermodel-attribute-mapper",
      "consentRequired" : false,
      "config" : {
        "userinfo.token.claim" : "true",
        "user.attribute" : "birthdate",
        "id.token.claim" : "true",
        "access.token.claim" : "true",
        "claim.name" : "birthdate",
        "jsonType.label" : "String"
      }
    }, {
      "id" : "2c4293f6-9678-4276-b4ba-f6b03677188f",
      "name" : "profile",
      "protocol" : "openid-connect",
      "protocolMapper" : "oidc-usermodel-attribute-mapper",
      "consentRequired" : false,
      "config" : {
        "userinfo.token.claim" : "true",
        "user.attribute" : "profile",
        "id.token.claim" : "true",
        "access.token.claim" : "true",
        "claim.name" : "profile",
        "jsonType.label" : "String"
      }
    }, {
      "id" : "f7764078-f0cd-4b45-8f1d-9ab18e085c94",
      "name" : "gender",
      "protocol" : "openid-connect",
      "protocolMapper" : "oidc-usermodel-attribute-mapper",
      "consentRequired" : false,
      "config" : {
        "userinfo.token.claim" : "true",
        "user.attribute" : "gender",
        "id.token.claim" : "true",
        "access.token.claim" : "true",
        "claim.name" : "gender",
        "jsonType.label" : "String"
      }
    }, {
      "id" : "5bc65f8b-0d6e-46fd-a232-52f0d349464b",
      "name" : "updated at",
      "protocol" : "openid-connect",
      "protocolMapper" : "oidc-usermodel-attribute-mapper",
      "consentRequired" : false,
      "config" : {
        "userinfo.token.claim" : "true",
        "user.attribute" : "updatedAt",
        "id.token.claim" : "true",
        "access.token.claim" : "true",
        "claim.name" : "updated_at",
        "jsonType.label" : "String"
      }
    }, {
      "id" : "e5ca9393-00a6-4b51-9fe6-e867ccf78785",
      "name" : "full name",
      "protocol" : "openid-connect",
      "protocolMapper" : "oidc-full-name-mapper",
      "consentRequired" : false,
      "config" : {
        "id.token.claim" : "true",
        "access.token.claim" : "true",
        "userinfo.token.claim" : "true"
      }
    } ]
  }, {
    "id" : "234c5e72-9a48-423c-b782-84c7da1b40f6",
    "name" : "email",
    "description" : "OpenID Connect built-in scope: email",
    "protocol" : "openid-connect",
    "attributes" : {
      "include.in.token.scope" : "true",
      "display.on.consent.screen" : "true",
      "consent.screen.text" : "${emailScopeConsentText}"
    },
    "protocolMappers" : [ {
      "id" : "1506445a-068b-49fa-9149-57187e096144",
      "name" : "email verified",
      "protocol" : "openid-connect",
      "protocolMapper" : "oidc-usermodel-property-mapper",
      "consentRequired" : false,
      "config" : {
        "userinfo.token.claim" : "true",
        "user.attribute" : "emailVerified",
        "id.token.claim" : "true",
        "access.token.claim" : "true",
        "claim.name" : "email_verified",
        "jsonType.label" : "boolean"
      }
    }, {
      "id" : "fbf81843-220f-4ed3-9ea3-4164fec12603",
      "name" : "email",
      "protocol" : "openid-connect",
      "protocolMapper" : "oidc-usermodel-property-mapper",
      "consentRequired" : false,
      "config" : {
        "userinfo.token.claim" : "true",
        "user.attribute" : "email",
        "id.token.claim" : "true",
        "access.token.claim" : "true",
        "claim.name" : "email",
        "jsonType.label" : "String"
      }
    } ]
  }, {
    "id" : "e0e0e90a-7ebc-4665-9609-a694122dd6fa",
    "name" : "address",
    "description" : "OpenID Connect built-in scope: address",
    "protocol" : "openid-connect",
    "attributes" : {
      "include.in.token.scope" : "true",
      "display.on.consent.screen" : "true",
      "consent.screen.text" : "${addressScopeConsentText}"
    },
    "protocolMappers" : [ {
      "id" : "fa7b2590-9d00-4f79-8f38-a9fa42e712a6",
      "name" : "address",
      "protocol" : "openid-connect",
      "protocolMapper" : "oidc-address-mapper",
      "consentRequired" : false,
      "config" : {
        "user.attribute.formatted" : "formatted",
        "user.attribute.country" : "country",
        "user.attribute.postal_code" : "postal_code",
        "userinfo.token.claim" : "true",
        "user.attribute.street" : "street",
        "id.token.claim" : "true",
        "user.attribute.region" : "region",
        "access.token.claim" : "true",
        "user.attribute.locality" : "locality"
      }
    } ]
  }, {
    "id" : "a4f06eed-baa2-4401-ba87-15415845f203",
    "name" : "phone",
    "description" : "OpenID Connect built-in scope: phone",
    "protocol" : "openid-connect",
    "attributes" : {
      "include.in.token.scope" : "true",
      "display.on.consent.screen" : "true",
      "consent.screen.text" : "${phoneScopeConsentText}"
    },
    "protocolMappers" : [ {
      "id" : "f85eacea-0693-4df3-94eb-d563b0b96c0c",
      "name" : "phone number",
      "protocol" : "openid-connect",
      "protocolMapper" : "oidc-usermodel-attribute-mapper",
      "consentRequired" : false,
      "config" : {
        "userinfo.token.claim" : "true",
        "user.attribute" : "phoneNumber",
        "id.token.claim" : "true",
        "access.token.claim" : "true",
        "claim.name" : "phone_number",
        "jsonType.label" : "String"
      }
    }, {
      "id" : "cb9da90e-b9b4-4077-bd88-9b522f131833",
      "name" : "phone number verified",
      "protocol" : "openid-connect",
      "protocolMapper" : "oidc-usermodel-attribute-mapper",
      "consentRequired" : false,
      "config" : {
        "userinfo.token.claim" : "true",
        "user.attribute" : "phoneNumberVerified",
        "id.token.claim" : "true",
        "access.token.claim" : "true",
        "claim.name" : "phone_number_verified",
        "jsonType.label" : "boolean"
      }
    } ]
  }, {
    "id" : "00f72b7c-1fc4-4e01-bf58-e53541056b55",
    "name" : "roles",
    "description" : "OpenID Connect scope for add user roles to the access token",
    "protocol" : "openid-connect",
    "attributes" : {
      "include.in.token.scope" : "false",
      "display.on.consent.screen" : "true",
      "consent.screen.text" : "${rolesScopeConsentText}"
    },
    "protocolMappers" : [ {
      "id" : "23de653f-6eb6-4a25-963a-ee9d8a3533cd",
      "name" : "audience resolve",
      "protocol" : "openid-connect",
      "protocolMapper" : "oidc-audience-resolve-mapper",
      "consentRequired" : false,
      "config" : { }
    }, {
      "id" : "860910d6-ca38-4e2d-8eec-a7c057977e31",
      "name" : "client roles",
      "protocol" : "openid-connect",
      "protocolMapper" : "oidc-usermodel-client-role-mapper",
      "consentRequired" : false,
      "config" : {
        "user.attribute" : "foo",
        "access.token.claim" : "true",
        "claim.name" : "resource_access.${client_id}.roles",
        "jsonType.label" : "String",
        "multivalued" : "true"
      }
    }, {
      "id" : "53fbff6d-825a-461d-980c-a06560b6997c",
      "name" : "realm roles",
      "protocol" : "openid-connect",
      "protocolMapper" : "oidc-usermodel-realm-role-mapper",
      "consentRequired" : false,
      "config" : {
        "user.attribute" : "foo",
        "access.token.claim" : "true",
        "claim.name" : "realm_access.roles",
        "jsonType.label" : "String",
        "multivalued" : "true"
      }
    } ]
  }, {
    "id" : "8c3b5ee1-ad6d-4d42-90ec-c74cee973014",
    "name" : "web-origins",
    "description" : "OpenID Connect scope for add allowed web origins to the access token",
    "protocol" : "openid-connect",
    "attributes" : {
      "include.in.token.scope" : "false",
      "display.on.consent.screen" : "false",
      "consent.screen.text" : ""
    },
    "protocolMappers" : [ {
      "id" : "105d7b42-4bf9-4efc-a3d2-ba057c960362",
      "name" : "allowed web origins",
      "protocol" : "openid-connect",
      "protocolMapper" : "oidc-allowed-origins-mapper",
      "consentRequired" : false,
      "config" : { }
    } ]
  }, {
    "id" : "69e57ec2-88e6-44fa-9c14-f09ac86b9b4a",
    "name" : "microprofile-jwt",
    "description" : "Microprofile - JWT built-in scope",
    "protocol" : "openid-connect",
    "attributes" : {
      "include.in.token.scope" : "true",
      "display.on.consent.screen" : "false"
    },
    "protocolMappers" : [ {
      "id" : "0b791c80-ada3-4926-bc9f-d11f97569c47",
      "name" : "groups",
      "protocol" : "openid-connect",
      "protocolMapper" : "oidc-usermodel-realm-role-mapper",
      "consentRequired" : false,
      "config" : {
        "multivalued" : "true",
        "userinfo.token.claim" : "true",
        "user.attribute" : "foo",
        "id.token.claim" : "true",
        "access.token.claim" : "true",
        "claim.name" : "groups",
        "jsonType.label" : "String"
      }
    }, {
      "id" : "87f47ede-84d3-4cf1-b08d-f0ce6653d5f4",
      "name" : "upn",
      "protocol" : "openid-connect",
      "protocolMapper" : "oidc-usermodel-property-mapper",
      "consentRequired" : false,
      "config" : {
        "userinfo.token.claim" : "true",
        "user.attribute" : "username",
        "id.token.claim" : "true",
        "access.token.claim" : "true",
        "claim.name" : "upn",
        "jsonType.label" : "String"
      }
    } ]
  } ],
  "defaultDefaultClientScopes" : [ "role_list", "profile", "email", "roles", "web-origins" ],
  "defaultOptionalClientScopes" : [ "offline_access", "address", "phone", "microprofile-jwt" ],
  "browserSecurityHeaders" : {
    "contentSecurityPolicyReportOnly" : "",
    "xContentTypeOptions" : "nosniff",
    "xRobotsTag" : "none",
    "xFrameOptions" : "SAMEORIGIN",
    "xXSSProtection" : "1; mode=block",
    "contentSecurityPolicy" : "frame-src 'self'; frame-ancestors 'self'; object-src 'none';",
    "strictTransportSecurity" : "max-age=31536000; includeSubDomains"
  },
  "smtpServer" : { },
  "loginTheme" : "nics",
  "accountTheme" : "nics",
  "adminTheme" : "nics",
  "emailTheme" : "nics",
  "eventsEnabled" : true,
  "eventsExpiration" : 31536000,
  "eventsListeners" : [ "jboss-logging" ],
  "enabledEventTypes" : [ "SEND_RESET_PASSWORD", "REMOVE_TOTP", "REVOKE_GRANT", "UPDATE_TOTP", "LOGIN_ERROR", "CLIENT_LOGIN", "RESET_PASSWORD_ERROR", "IMPERSONATE_ERROR", "CODE_TO_TOKEN_ERROR", "CUSTOM_REQUIRED_ACTION", "RESTART_AUTHENTICATION", "IMPERSONATE", "UPDATE_PROFILE_ERROR", "LOGIN", "UPDATE_PASSWORD_ERROR", "CLIENT_INITIATED_ACCOUNT_LINKING", "TOKEN_EXCHANGE", "LOGOUT", "REGISTER", "CLIENT_REGISTER", "IDENTITY_PROVIDER_LINK_ACCOUNT", "UPDATE_PASSWORD", "CLIENT_DELETE", "FEDERATED_IDENTITY_LINK_ERROR", "IDENTITY_PROVIDER_FIRST_LOGIN", "CLIENT_DELETE_ERROR", "VERIFY_EMAIL", "CLIENT_LOGIN_ERROR", "RESTART_AUTHENTICATION_ERROR", "EXECUTE_ACTIONS", "REMOVE_FEDERATED_IDENTITY_ERROR", "TOKEN_EXCHANGE_ERROR", "PERMISSION_TOKEN", "SEND_IDENTITY_PROVIDER_LINK_ERROR", "EXECUTE_ACTION_TOKEN_ERROR", "SEND_VERIFY_EMAIL", "EXECUTE_ACTIONS_ERROR", "REMOVE_FEDERATED_IDENTITY", "IDENTITY_PROVIDER_POST_LOGIN", "IDENTITY_PROVIDER_LINK_ACCOUNT_ERROR", "UPDATE_EMAIL", "REGISTER_ERROR", "REVOKE_GRANT_ERROR", "EXECUTE_ACTION_TOKEN", "LOGOUT_ERROR", "UPDATE_EMAIL_ERROR", "CLIENT_UPDATE_ERROR", "UPDATE_PROFILE", "CLIENT_REGISTER_ERROR", "FEDERATED_IDENTITY_LINK", "SEND_IDENTITY_PROVIDER_LINK", "SEND_VERIFY_EMAIL_ERROR", "RESET_PASSWORD", "CLIENT_INITIATED_ACCOUNT_LINKING_ERROR", "REMOVE_TOTP_ERROR", "VERIFY_EMAIL_ERROR", "SEND_RESET_PASSWORD_ERROR", "CLIENT_UPDATE", "CUSTOM_REQUIRED_ACTION_ERROR", "IDENTITY_PROVIDER_POST_LOGIN_ERROR", "UPDATE_TOTP_ERROR", "CODE_TO_TOKEN", "IDENTITY_PROVIDER_FIRST_LOGIN_ERROR" ],
  "adminEventsEnabled" : true,
  "adminEventsDetailsEnabled" : true,
  "components" : {
    "org.keycloak.services.clientregistration.policy.ClientRegistrationPolicy" : [ {
      "id" : "aec1255b-bfd0-4cf4-9c8a-0b253bb4a148",
      "name" : "Allowed Protocol Mapper Types",
      "providerId" : "allowed-protocol-mappers",
      "subType" : "anonymous",
      "subComponents" : { },
      "config" : {
        "allowed-protocol-mapper-types" : [ "oidc-full-name-mapper", "oidc-usermodel-property-mapper", "oidc-address-mapper", "saml-user-attribute-mapper", "oidc-usermodel-attribute-mapper", "oidc-sha256-pairwise-sub-mapper", "saml-role-list-mapper", "saml-user-property-mapper" ]
      }
    }, {
      "id" : "9326de99-f2fb-4950-8bac-e98982fff0b4",
      "name" : "Full Scope Disabled",
      "providerId" : "scope",
      "subType" : "anonymous",
      "subComponents" : { },
      "config" : { }
    }, {
      "id" : "94232ac8-92e8-4ccc-a9ff-b3b2e00be140",
      "name" : "Max Clients Limit",
      "providerId" : "max-clients",
      "subType" : "anonymous",
      "subComponents" : { },
      "config" : {
        "max-clients" : [ "200" ]
      }
    }, {
      "id" : "2431d90a-0e76-44a1-b200-fe75bd6b13a8",
      "name" : "Allowed Client Scopes",
      "providerId" : "allowed-client-templates",
      "subType" : "anonymous",
      "subComponents" : { },
      "config" : {
        "allow-default-scopes" : [ "true" ]
      }
    }, {
      "id" : "973a4b5b-e06d-4d70-b64b-8b99a4300656",
      "name" : "Trusted Hosts",
      "providerId" : "trusted-hosts",
      "subType" : "anonymous",
      "subComponents" : { },
      "config" : {
        "host-sending-registration-request-must-match" : [ "true" ],
        "client-uris-must-match" : [ "true" ]
      }
    }, {
      "id" : "34b1121b-37f2-4090-b1af-f48dc7c1cdbd",
      "name" : "Consent Required",
      "providerId" : "consent-required",
      "subType" : "anonymous",
      "subComponents" : { },
      "config" : { }
    }, {
      "id" : "e5e6881c-992a-4d58-a401-589f004f3d43",
      "name" : "Allowed Client Scopes",
      "providerId" : "allowed-client-templates",
      "subType" : "authenticated",
      "subComponents" : { },
      "config" : {
        "allow-default-scopes" : [ "true" ]
      }
    }, {
      "id" : "ad4a66e4-8600-4948-bbbe-2117eee25587",
      "name" : "Allowed Protocol Mapper Types",
      "providerId" : "allowed-protocol-mappers",
      "subType" : "authenticated",
      "subComponents" : { },
      "config" : {
        "allowed-protocol-mapper-types" : [ "saml-user-attribute-mapper", "oidc-usermodel-property-mapper", "oidc-address-mapper", "saml-role-list-mapper", "oidc-usermodel-attribute-mapper", "saml-user-property-mapper", "oidc-sha256-pairwise-sub-mapper", "oidc-full-name-mapper" ]
      }
    } ],
    "org.keycloak.keys.KeyProvider" : [ {
      "id" : "f6a9cc63-7100-4d95-8655-b5a9b9755cb4",
      "name" : "rsa-generated",
      "providerId" : "rsa-generated",
      "subComponents" : { },
      "config" : {
        "privateKey" : [ "MIIEpAIBAAKCAQEAgtHnvffWGPt2KzANWucuNPGy0Dn+9RomgDwFA9y0F4Oi3wXIYZ0XohmJPl1dddmG7p9rupnEhLbtXWoruO9pJTmpX0qXNkZBGGGHPiEby1bNGHUvpAMYSf8KZ+jOacXl2X5NEW+vDUmVgJbYZLiiXKOD9/ksZ+KHSx3u+f8Og7YBjzXviTH7xKSu4DoGNvG0RcQblmTPvFjiZVO27gdg8fv0i/i6zgpLaumHg2Ceq1CyRp4qoj9nb4+Wbxi/6OaoeIACu4qbY1r6SXdKO9eU33zL43w2vc6ufuWdH0veuxGSqE60lErd/J1VWs8j0tYzP7Ur5GHhVFHW6n5WTBeCRwIDAQABAoIBAA3Tv+ndWzzSv1+7OX4lN0YTUfIeXytq8yzUqzcISeS+XiWyh8aBgzD4AACef7VoI5HvOcTEYfghGZ+pDCwE6hksKhHPYYI0FMdN76yKdVSdvRnbsQhl51hS47et7LtTVoMRjXXNVzRRVcL8rqyes1KVWeqI5L+qOuCerlawNcmH+Y8IeVVWiiqRvv/TejTXFpjfsrYPMM+928wZgATBoL9wkOMkBNpioQdzkYjZA1BQdJV1GUeozZ8Uf9gqsxLFri9iIwrdLXcfTJUspNjAI2R2P8CMoHq7xhQqsF55LEuvPZV7+h5hCxvj4iQCcSeJ/4hs59ypUfWPtEdCBMit5iECgYEAwNnPx44Zw8uXQ7252H9CaXOkagKb+jxwlGPv4d9Zxcss9PX8usUeE8uTf0xF6B9ePME+5l6aSso7Sw9ABCSxA9yTB+Yf998+73J8iqxxgcWGxEJfUpSkcv2pU2Glc9R2ZsTEnczse8aJYpTIelp9rE1S1TvSp53c+/JTA9PqLJcCgYEArag0SbFCcREwP24+na9bymWueSc1feoYvDZWj3VIjCUF53bCYnkRo6TucU4btHcJvuIutw+kxNc3bxZITBo3mnGPr14mElapTWGrjIuOR0Mk64yy3GxqxBl4I2kcGMBDF+fEyoYPWhVMKJYuriCayb/GJfcfe2OvgwN3kAOEHdECgYEAgWqp8TT/PVHG9QLBUPQ10SZ1015k5gzhT/Ow61dDm2S5irn5HC1j/czD8s1wrFFAoGzelSIvULleCQT25NDqqbjAQrDAC0uZpH6j7TvEAF5aDiKsbXKq2TA5DWed7JlLy7OIbo0yte2KDMnjr5hCdfp99/LpbuqVfc4kv5DauYkCgYAd0KdJj7mMmBrkiRUPFbB4y4RtIKI6gBrHFb0+3DAcf67H0sgFCCxTIFof8f0nuthdgY/rti/f6+OEmxrGlim9xomY3l1DAMYIlyBQ/RTsf0azenCrD6I1EPpjegRs63WZgR10eBfiq41r2n0hQE/TG631jrxE/xR/NfUtMK1aQQKBgQCrAWwzXoDa+O1kWwK1IdDMgq12O+J+51CRZ0uiV9iQf/IwwJ/Z+vBLohAnxsNUDfImqZZLrBhY+C6hkUE2PbgmDtlutGpvKdv0lSZef5WsVjHuMEdFnxGLfBYN6gxjHicqptRMQtMMzfFT1BOOfHiXjifkmXv8xW5kpPYFUhPHGQ==" ],
        "certificate" : [ "MIIClzCCAX8CBgFqdOIoyjANBgkqhkiG9w0BAQsFADAPMQ0wCwYDVQQDDAROSUNTMB4XDTE5MDUwMTE5MzAzOVoXDTI5MDUwMTE5MzIxOVowDzENMAsGA1UEAwwETklDUzCCASIwDQYJKoZIhvcNAQEBBQADggEPADCCAQoCggEBAILR57331hj7diswDVrnLjTxstA5/vUaJoA8BQPctBeDot8FyGGdF6IZiT5dXXXZhu6fa7qZxIS27V1qK7jvaSU5qV9KlzZGQRhhhz4hG8tWzRh1L6QDGEn/CmfozmnF5dl+TRFvrw1JlYCW2GS4olyjg/f5LGfih0sd7vn/DoO2AY8174kx+8SkruA6BjbxtEXEG5Zkz7xY4mVTtu4HYPH79Iv4us4KS2rph4NgnqtQskaeKqI/Z2+Plm8Yv+jmqHiAAruKm2Na+kl3SjvXlN98y+N8Nr3Orn7lnR9L3rsRkqhOtJRK3fydVVrPI9LWMz+1K+Rh4VRR1up+VkwXgkcCAwEAATANBgkqhkiG9w0BAQsFAAOCAQEAYJ6ef0uymzH8iEyfejk8mfHjV/zgGV8u5uIh8P0eMFGo9DKrjWudVFrx5LNTm9KJMBsoyL8H1jv/UdVNxsUz65UOVAM9RUYMDod+UdCWVRKtVcpSaNwjngfYXRTQ4r1rVOQevmNVK20lylR1vQiE7SkwcCzylL89xf9U195w5XfCmIuOH84S3k208Ru2yUzrtMFz8B0sgpYfHCwANbqRdY/tSWbIsSN6rNdD0ww6DIsYaWQJOBbUQwBJrqhaFo53+RcnZjHJwvSqhsd+A51OSbrNTVUNYP8D7HEygs/MgVy7PcbimEAPMOBnSYf7/vaK7fSk/ofWFSx6wsrpj+COVQ==" ],
        "priority" : [ "100" ]
      }
    }, {
      "id" : "fc4e1247-9ae5-4dfd-8812-725bd2016acb",
      "name" : "hmac-generated",
      "providerId" : "hmac-generated",
      "subComponents" : { },
      "config" : {
        "kid" : [ "4211778c-418f-4f57-8709-c387a489b923" ],
        "secret" : [ "PYVv--kBpt1LRr6kb2QW26ou_nWUSuhzFpE3HUC2t9eDIQNxa138TVvAGnLwFtbtmBfrmdhzqGoevLZ-D8lexw" ],
        "priority" : [ "100" ],
        "algorithm" : [ "HS256" ]
      }
    }, {
      "id" : "9d1585f1-8a0a-4139-a48a-ed3072b8990e",
      "name" : "aes-generated",
      "providerId" : "aes-generated",
      "subComponents" : { },
      "config" : {
        "kid" : [ "18e28df1-1278-43d4-a341-e00311be7701" ],
        "secret" : [ "mbsPCFoyMRbVAJ1NOInaZg" ],
        "priority" : [ "100" ]
      }
    } ]
  },
  "internationalizationEnabled" : true,
  "supportedLocales" : [ "bs", "en", "hr", "es", "mk", "sr", "sr-ME" ],
  "defaultLocale" : "en",
  "authenticationFlows" : [ {
    "id" : "63a84a78-dbd1-43c0-8d17-a5428f219e6c",
    "alias" : "Handle Existing Account",
    "description" : "Handle what to do if there is existing account with same email/username like authenticated identity provider",
    "providerId" : "basic-flow",
    "topLevel" : false,
    "builtIn" : true,
    "authenticationExecutions" : [ {
      "authenticator" : "idp-confirm-link",
      "requirement" : "REQUIRED",
      "priority" : 10,
      "userSetupAllowed" : false,
      "autheticatorFlow" : false
    }, {
      "authenticator" : "idp-email-verification",
      "requirement" : "ALTERNATIVE",
      "priority" : 20,
      "userSetupAllowed" : false,
      "autheticatorFlow" : false
    }, {
      "requirement" : "ALTERNATIVE",
      "priority" : 30,
      "flowAlias" : "Verify Existing Account by Re-authentication",
      "userSetupAllowed" : false,
      "autheticatorFlow" : true
    } ]
  }, {
    "id" : "4c33fcb9-7218-4da0-bf41-f04feed265e7",
    "alias" : "NICS Registration",
    "description" : "registration flow",
    "providerId" : "basic-flow",
    "topLevel" : true,
    "builtIn" : false,
    "authenticationExecutions" : [ {
      "authenticator" : "registration-page-form",
      "requirement" : "REQUIRED",
      "priority" : 10,
      "flowAlias" : "Pre-Registration",
      "userSetupAllowed" : false,
      "autheticatorFlow" : true
    }, {
      "authenticator" : "registration-page-form",
      "requirement" : "REQUIRED",
      "priority" : 11,
      "flowAlias" : "NICS Registration registration form",
      "userSetupAllowed" : false,
      "autheticatorFlow" : true
    }, {
      "authenticator" : "registration-page-form",
      "requirement" : "REQUIRED",
      "priority" : 12,
      "flowAlias" : "Post-Registration",
      "userSetupAllowed" : false,
      "autheticatorFlow" : true
    } ]
  }, {
    "id" : "8521c47f-a61e-48b4-9c0d-772f32213f42",
    "alias" : "NICS Registration registration form",
    "description" : "registration form",
    "providerId" : "form-flow",
    "topLevel" : false,
    "builtIn" : false,
    "authenticationExecutions" : [ {
      "authenticator" : "registration-user-creation",
      "requirement" : "REQUIRED",
      "priority" : 20,
      "userSetupAllowed" : false,
      "autheticatorFlow" : false
    }, {
      "authenticator" : "registration-profile-action",
      "requirement" : "REQUIRED",
      "priority" : 40,
      "userSetupAllowed" : false,
      "autheticatorFlow" : false
    }, {
      "authenticator" : "registration-password-action",
      "requirement" : "REQUIRED",
      "priority" : 50,
      "userSetupAllowed" : false,
      "autheticatorFlow" : false
    }, {
      "authenticator" : "registration-recaptcha-action",
      "requirement" : "DISABLED",
      "priority" : 60,
      "userSetupAllowed" : false,
      "autheticatorFlow" : false
    } ]
  }, {
    "id" : "c05189e8-ffb9-4607-b4cd-bab60539d57f",
    "alias" : "Post-Registration",
    "description" : "",
    "providerId" : "basic-flow",
    "topLevel" : false,
    "builtIn" : false,
    "authenticationExecutions" : [ {
      "authenticatorConfig" : "create-nics-user",
      "authenticator" : "auth-script-based",
      "requirement" : "REQUIRED",
      "priority" : 0,
      "userSetupAllowed" : false,
      "autheticatorFlow" : false
    } ]
  }, {
    "id" : "352fb869-ef0b-435c-92a9-53632ae1a52b",
    "alias" : "Pre-Registration",
    "description" : "",
    "providerId" : "basic-flow",
    "topLevel" : false,
    "builtIn" : false,
    "authenticationExecutions" : [ {
      "authenticatorConfig" : "retrieve-organizations",
      "authenticator" : "auth-script-based",
      "requirement" : "REQUIRED",
      "priority" : 0,
      "userSetupAllowed" : false,
      "autheticatorFlow" : false
    } ]
  }, {
    "id" : "75af02ee-aa3d-4c28-a493-179cb6c5e6db",
    "alias" : "Verify Existing Account by Re-authentication",
    "description" : "Reauthentication of existing account",
    "providerId" : "basic-flow",
    "topLevel" : false,
    "builtIn" : true,
    "authenticationExecutions" : [ {
      "authenticator" : "idp-username-password-form",
      "requirement" : "REQUIRED",
      "priority" : 10,
      "userSetupAllowed" : false,
      "autheticatorFlow" : false
    }, {
      "authenticator" : "auth-otp-form",
      "requirement" : "OPTIONAL",
      "priority" : 20,
      "userSetupAllowed" : false,
      "autheticatorFlow" : false
    } ]
  }, {
    "id" : "e1d0eea9-8a41-4c23-834b-778619bbccdb",
    "alias" : "browser",
    "description" : "browser based authentication",
    "providerId" : "basic-flow",
    "topLevel" : true,
    "builtIn" : true,
    "authenticationExecutions" : [ {
      "authenticator" : "auth-cookie",
      "requirement" : "ALTERNATIVE",
      "priority" : 10,
      "userSetupAllowed" : false,
      "autheticatorFlow" : false
    }, {
      "authenticator" : "auth-spnego",
      "requirement" : "DISABLED",
      "priority" : 20,
      "userSetupAllowed" : false,
      "autheticatorFlow" : false
    }, {
      "authenticator" : "identity-provider-redirector",
      "requirement" : "ALTERNATIVE",
      "priority" : 25,
      "userSetupAllowed" : false,
      "autheticatorFlow" : false
    }, {
      "requirement" : "ALTERNATIVE",
      "priority" : 30,
      "flowAlias" : "forms",
      "userSetupAllowed" : false,
      "autheticatorFlow" : true
    } ]
  }, {
    "id" : "8cd459a6-7c6c-47df-93de-e3fc0b86ef2a",
    "alias" : "clients",
    "description" : "Base authentication for clients",
    "providerId" : "client-flow",
    "topLevel" : true,
    "builtIn" : true,
    "authenticationExecutions" : [ {
      "authenticator" : "client-secret",
      "requirement" : "ALTERNATIVE",
      "priority" : 10,
      "userSetupAllowed" : false,
      "autheticatorFlow" : false
    }, {
      "authenticator" : "client-jwt",
      "requirement" : "ALTERNATIVE",
      "priority" : 20,
      "userSetupAllowed" : false,
      "autheticatorFlow" : false
    }, {
      "authenticator" : "client-secret-jwt",
      "requirement" : "ALTERNATIVE",
      "priority" : 30,
      "userSetupAllowed" : false,
      "autheticatorFlow" : false
    }, {
      "authenticator" : "client-x509",
      "requirement" : "ALTERNATIVE",
      "priority" : 40,
      "userSetupAllowed" : false,
      "autheticatorFlow" : false
    } ]
  }, {
    "id" : "ee1eec06-7caf-489e-8e8d-1a25cfbefc03",
    "alias" : "direct grant",
    "description" : "OpenID Connect Resource Owner Grant",
    "providerId" : "basic-flow",
    "topLevel" : true,
    "builtIn" : true,
    "authenticationExecutions" : [ {
      "authenticator" : "direct-grant-validate-username",
      "requirement" : "REQUIRED",
      "priority" : 10,
      "userSetupAllowed" : false,
      "autheticatorFlow" : false
    }, {
      "authenticator" : "direct-grant-validate-password",
      "requirement" : "REQUIRED",
      "priority" : 20,
      "userSetupAllowed" : false,
      "autheticatorFlow" : false
    }, {
      "authenticator" : "direct-grant-validate-otp",
      "requirement" : "OPTIONAL",
      "priority" : 30,
      "userSetupAllowed" : false,
      "autheticatorFlow" : false
    } ]
  }, {
    "id" : "127b815b-283d-4efd-af23-c887f1e85ab4",
    "alias" : "docker auth",
    "description" : "Used by Docker clients to authenticate against the IDP",
    "providerId" : "basic-flow",
    "topLevel" : true,
    "builtIn" : true,
    "authenticationExecutions" : [ {
      "authenticator" : "docker-http-basic-authenticator",
      "requirement" : "REQUIRED",
      "priority" : 10,
      "userSetupAllowed" : false,
      "autheticatorFlow" : false
    } ]
  }, {
    "id" : "6925c2dd-2143-4b3f-9be3-e1e5ccc0989a",
    "alias" : "first broker login",
    "description" : "Actions taken after first broker login with identity provider account, which is not yet linked to any Keycloak account",
    "providerId" : "basic-flow",
    "topLevel" : true,
    "builtIn" : true,
    "authenticationExecutions" : [ {
      "authenticatorConfig" : "review profile config",
      "authenticator" : "idp-review-profile",
      "requirement" : "REQUIRED",
      "priority" : 10,
      "userSetupAllowed" : false,
      "autheticatorFlow" : false
    }, {
      "authenticatorConfig" : "create unique user config",
      "authenticator" : "idp-create-user-if-unique",
      "requirement" : "ALTERNATIVE",
      "priority" : 20,
      "userSetupAllowed" : false,
      "autheticatorFlow" : false
    }, {
      "requirement" : "ALTERNATIVE",
      "priority" : 30,
      "flowAlias" : "Handle Existing Account",
      "userSetupAllowed" : false,
      "autheticatorFlow" : true
    } ]
  }, {
    "id" : "cd14f48f-1ae0-4957-8f93-39bf4385290e",
    "alias" : "forms",
    "description" : "Username, password, otp and other auth forms.",
    "providerId" : "basic-flow",
    "topLevel" : false,
    "builtIn" : true,
    "authenticationExecutions" : [ {
      "authenticator" : "auth-username-password-form",
      "requirement" : "REQUIRED",
      "priority" : 10,
      "userSetupAllowed" : false,
      "autheticatorFlow" : false
    }, {
      "authenticator" : "auth-otp-form",
      "requirement" : "OPTIONAL",
      "priority" : 20,
      "userSetupAllowed" : false,
      "autheticatorFlow" : false
    } ]
  }, {
    "id" : "07bf2565-bb3a-4353-93ff-730f676156a9",
    "alias" : "http challenge",
    "description" : "An authentication flow based on challenge-response HTTP Authentication Schemes",
    "providerId" : "basic-flow",
    "topLevel" : true,
    "builtIn" : true,
    "authenticationExecutions" : [ {
      "authenticator" : "no-cookie-redirect",
      "requirement" : "REQUIRED",
      "priority" : 10,
      "userSetupAllowed" : false,
      "autheticatorFlow" : false
    }, {
      "authenticator" : "basic-auth",
      "requirement" : "REQUIRED",
      "priority" : 20,
      "userSetupAllowed" : false,
      "autheticatorFlow" : false
    }, {
      "authenticator" : "basic-auth-otp",
      "requirement" : "DISABLED",
      "priority" : 30,
      "userSetupAllowed" : false,
      "autheticatorFlow" : false
    }, {
      "authenticator" : "auth-spnego",
      "requirement" : "DISABLED",
      "priority" : 40,
      "userSetupAllowed" : false,
      "autheticatorFlow" : false
    } ]
  }, {
    "id" : "232101b0-86b5-4550-bf3d-bd334050dc4c",
    "alias" : "registration",
    "description" : "registration flow",
    "providerId" : "basic-flow",
    "topLevel" : true,
    "builtIn" : true,
    "authenticationExecutions" : [ {
      "authenticator" : "registration-page-form",
      "requirement" : "REQUIRED",
      "priority" : 10,
      "flowAlias" : "registration form",
      "userSetupAllowed" : false,
      "autheticatorFlow" : true
    } ]
  }, {
    "id" : "7a4125c8-3011-4607-bcab-e7eb927ddded",
    "alias" : "registration form",
    "description" : "registration form",
    "providerId" : "form-flow",
    "topLevel" : false,
    "builtIn" : true,
    "authenticationExecutions" : [ {
      "authenticator" : "registration-user-creation",
      "requirement" : "REQUIRED",
      "priority" : 20,
      "userSetupAllowed" : false,
      "autheticatorFlow" : false
    }, {
      "authenticator" : "registration-profile-action",
      "requirement" : "REQUIRED",
      "priority" : 40,
      "userSetupAllowed" : false,
      "autheticatorFlow" : false
    }, {
      "authenticator" : "registration-password-action",
      "requirement" : "REQUIRED",
      "priority" : 50,
      "userSetupAllowed" : false,
      "autheticatorFlow" : false
    }, {
      "authenticator" : "registration-recaptcha-action",
      "requirement" : "DISABLED",
      "priority" : 60,
      "userSetupAllowed" : false,
      "autheticatorFlow" : false
    } ]
  }, {
    "id" : "5f4d9bc1-3776-4c93-bd41-ac6e487aca25",
    "alias" : "reset credentials",
    "description" : "Reset credentials for a user if they forgot their password or something",
    "providerId" : "basic-flow",
    "topLevel" : true,
    "builtIn" : true,
    "authenticationExecutions" : [ {
      "authenticator" : "reset-credentials-choose-user",
      "requirement" : "REQUIRED",
      "priority" : 10,
      "userSetupAllowed" : false,
      "autheticatorFlow" : false
    }, {
      "authenticator" : "reset-credential-email",
      "requirement" : "REQUIRED",
      "priority" : 20,
      "userSetupAllowed" : false,
      "autheticatorFlow" : false
    }, {
      "authenticator" : "reset-password",
      "requirement" : "REQUIRED",
      "priority" : 30,
      "userSetupAllowed" : false,
      "autheticatorFlow" : false
    }, {
      "authenticator" : "reset-otp",
      "requirement" : "OPTIONAL",
      "priority" : 40,
      "userSetupAllowed" : false,
      "autheticatorFlow" : false
    } ]
  }, {
    "id" : "4059182c-9e48-4456-b222-30b6259c78e5",
    "alias" : "saml ecp",
    "description" : "SAML ECP Profile Authentication Flow",
    "providerId" : "basic-flow",
    "topLevel" : true,
    "builtIn" : true,
    "authenticationExecutions" : [ {
      "authenticator" : "http-basic-authenticator",
      "requirement" : "REQUIRED",
      "priority" : 10,
      "userSetupAllowed" : false,
      "autheticatorFlow" : false
    } ]
  } ],
  "authenticatorConfig" : [ {
    "id" : "4139f5bb-7cc5-4fdf-9098-b71247e15bcf",
    "alias" : "create unique user config",
    "config" : {
      "require.password.update.after.registration" : "false"
    }
  }, {
    "id" : "e54bb648-92ad-42fa-bb6d-30e09dd4148f",
    "alias" : "create-nics-user",
    "config" : {
      "scriptCode" : "var emapiUrl = 'http://{{ nics_data_fqdn }}:8080/em-api/v1';\nvar usersUrL = emapiUrl + \"/users/1\";\n\n// import enum for error lookup\nAuthenticationFlowError = Java.type(\"org.keycloak.authentication.AuthenticationFlowError\");\n\n/**\n * An example authenticate function.\n *\n * The following variables are available for convenience:\n * user - current user {@see org.keycloak.models.UserModel}\n * realm - current realm {@see org.keycloak.models.RealmModel}\n * session - current KeycloakSession {@see org.keycloak.models.KeycloakSession}\n * httpRequest - current HttpRequest {@see org.jboss.resteasy.spi.HttpRequest}\n * script - current script {@see org.keycloak.models.ScriptModel}\n * authenticationSession - current authentication session {@see org.keycloak.sessions.AuthenticationSessionModel}\n * LOG - current logger {@see org.jboss.logging.Logger}\n *\n * You one can extract current http request headers via:\n * httpRequest.getHttpHeaders().getHeaderString(\"Forwarded\")\n *\n * @param context {@see org.keycloak.authentication.AuthenticationFlowContext}\n */\nfunction authenticate(context) {\n\n   var jsonString = {};\n   jsonString.firstName = user.getFirstName();\n   jsonString.lastName = user.getLastName();\n   jsonString.email = user.getEmail();\n   jsonString.organization = user.getAttribute('organization').get(0);\n   LOG.info(script.name + \" jsonString: \" + jsonString);\n   \n   var clientBuilder = Java.type(\"org.apache.http.impl.client.HttpClientBuilder\").create();\n   var client = clientBuilder.build();\n   var HttpPost = Java.type(\"org.apache.http.client.methods.HttpPost\");\n   var postReq = new HttpPost(usersUrL);\n   postReq.setHeader(\"Content-Type\", \"application/json\");\n   var payload = JSON.stringify(jsonString);\n   var StringEntity = Java.type(\"org.apache.http.entity.StringEntity\");\n   var entity = new StringEntity(payload,\"UTF-8\");\n   postReq.setEntity(entity);\n   var response = client.execute(postReq);\n   if (response.getStatusLine().getStatusCode() > 299) {\n      LOG.error(script.name + \" status code: \" + response.getStatusLine().getStatusCode());\n      context.failure(AuthenticationFlowError.INTERNAL_ERROR);\n      return;\n   }\n   user.setEnabled(false);\n   context.cancelLogin();\n}"
    }
  }, {
    "id" : "297fb390-94d8-4ff2-a99a-845e751cf1d5",
    "alias" : "retrieve-organizations",
    "config" : {
      "scriptCode" : "var emapiUrl = 'http://{{ nics_data_fqdn }}:8080/em-api/v1';\n\nvar allOrgsUrl = emapiUrl + \"/orgs/1/all\";\nvar orgTypesUrl = emapiUrl + \"/orgs/1/types\";\nvar orgOrgTypeUrl = emapiUrl + \"/orgs/1/typemap\";\n\nSimpleHttp = Java.type(\"org.keycloak.broker.provider.util.SimpleHttp\");\n// import enum for error lookup\nAuthenticationFlowError = Java.type(\"org.keycloak.authentication.AuthenticationFlowError\");\n\n/**\n * The following variables are available for convenience:\n * user - current user {@see org.keycloak.models.UserModel}\n * realm - current realm {@see org.keycloak.models.RealmModel}\n * session - current KeycloakSession {@see org.keycloak.models.KeycloakSession}\n * httpRequest - current HttpRequest {@see org.jboss.resteasy.spi.HttpRequest}\n * script - current script {@see org.keycloak.models.ScriptModel}\n * authenticationSession - current authentication session {@see org.keycloak.sessions.AuthenticationSessionModel}\n * LOG - current logger {@see org.jboss.logging.Logger}\n *\n * You one can extract current http request headers via:\n * httpRequest.getHttpHeaders().getHeaderString(\"Forwarded\")\n *\n * @param context {@see org.keycloak.authentication.AuthenticationFlowContext}\n */\nfunction authenticate(context) {\n\n    client = session.getContext().getClient();\n\n    var orgsJsonString = SimpleHttp.doGet(allOrgsUrl, session).asString();\n    var orgsJsonParsed = JSON.parse(orgsJsonString);\n    LOG.info(script.name + \" allOrgsUrl: \\n\" + orgsJsonString);\n\n    var orgtypesJsonString = SimpleHttp.doGet(orgTypesUrl, session).asString();\n    var orgtypesJsonParsed = JSON.parse(orgtypesJsonString);\n    LOG.info(script.name + \" orgTypesUrl: \\n\" + orgtypesJsonString);\n\n    var orgtypemapJsonString = SimpleHttp.doGet(orgOrgTypeUrl, session).asString();\n    var orgtypemapJsonParsed = JSON.parse(orgtypemapJsonString);\n    LOG.info(script.name + \" orgOrgTypeUrl: \\n\" + orgtypemapJsonString);\n\n    var affiliationsList = [];\n    for (var i = 0; i < orgtypesJsonParsed.count; i++) {\n      affiliationsList.push(orgtypesJsonParsed.orgTypes[i].orgTypeId + \"|\" + orgtypesJsonParsed.orgTypes[i].orgTypeName);\n    }\n    LOG.info(script.name + \" affiliationsList (\" + affiliationsList.toString().length + \"): \\n\" + affiliationsList );\n    client.setAttribute('affiliations',affiliationsList);\n\n    var organizationsList = [];\n    for (var j = 0; j < orgsJsonParsed.count; j++) {\n      if (Object.keys(orgsJsonParsed.organizations[j].orgTypes).length !== 0) {\n         organizationsList.push(orgsJsonParsed.organizations[j].orgTypes[0].orgtypeid + '|' + orgsJsonParsed.organizations[j].orgId + '|' + orgsJsonParsed.organizations[j].name);\n      }\n    }\n    LOG.info(script.name + \" organizationsList (\" + organizationsList.toString().length + \"): \\n\" + organizationsList); \n    client.setAttribute('organizations',organizationsList);\n    \n    \n    \n    //var orgtypeLists = [];\n    //for (var k = 0; k < orgsJsonParsed.count; k++) {\n    //    orgtypeLists.push(orgsJsonParsed.organizations[k].orgTypes.orgtypeid\n    //}\n    context.success();\n}"
    }
  }, {
    "id" : "c40f0c0c-0ab9-4ab6-bc28-5c73ab11f558",
    "alias" : "review profile config",
    "config" : {
      "update.profile.on.first.login" : "missing"
    }
  } ],
  "requiredActions" : [ {
    "alias" : "CONFIGURE_TOTP",
    "name" : "Configure OTP",
    "providerId" : "CONFIGURE_TOTP",
    "enabled" : true,
    "defaultAction" : false,
    "priority" : 10,
    "config" : { }
  }, {
    "alias" : "terms_and_conditions",
    "name" : "Terms and Conditions",
    "providerId" : "terms_and_conditions",
    "enabled" : false,
    "defaultAction" : false,
    "priority" : 20,
    "config" : { }
  }, {
    "alias" : "UPDATE_PASSWORD",
    "name" : "Update Password",
    "providerId" : "UPDATE_PASSWORD",
    "enabled" : true,
    "defaultAction" : false,
    "priority" : 30,
    "config" : { }
  }, {
    "alias" : "UPDATE_PROFILE",
    "name" : "Update Profile",
    "providerId" : "UPDATE_PROFILE",
    "enabled" : true,
    "defaultAction" : false,
    "priority" : 40,
    "config" : { }
  }, {
    "alias" : "VERIFY_EMAIL",
    "name" : "Verify Email",
    "providerId" : "VERIFY_EMAIL",
    "enabled" : true,
    "defaultAction" : false,
    "priority" : 50,
    "config" : { }
  } ],
  "browserFlow" : "browser",
  "registrationFlow" : "NICS Registration",
  "directGrantFlow" : "direct grant",
  "resetCredentialsFlow" : "reset credentials",
  "clientAuthenticationFlow" : "clients",
  "dockerAuthenticationFlow" : "docker auth",
  "attributes" : {
    "_browser_header.xXSSProtection" : "1; mode=block",
    "_browser_header.strictTransportSecurity" : "max-age=31536000; includeSubDomains",
    "_browser_header.xFrameOptions" : "SAMEORIGIN",
    "quickLoginCheckMilliSeconds" : "1000",
    "permanentLockout" : "false",
    "_browser_header.xRobotsTag" : "none",
    "maxFailureWaitSeconds" : "900",
    "minimumQuickLoginWaitSeconds" : "60",
    "failureFactor" : "30",
    "actionTokenGeneratedByUserLifespan" : "259200",
    "maxDeltaTimeSeconds" : "43200",
    "_browser_header.xContentTypeOptions" : "nosniff",
    "actionTokenGeneratedByAdminLifespan" : "259200",
    "offlineSessionMaxLifespan" : "5184000",
    "_browser_header.contentSecurityPolicyReportOnly" : "",
    "bruteForceProtected" : "true",
    "_browser_header.contentSecurityPolicy" : "frame-src 'self'; frame-ancestors 'self'; object-src 'none';",
    "offlineSessionMaxLifespanEnabled" : "false",
    "waitIncrementSeconds" : "60"
  },
  "keycloakVersion" : "6.0.1",
  "userManagedAccessAllowed" : false
}